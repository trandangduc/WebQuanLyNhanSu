#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebQuanLyNhanSu
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLNS")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAttendance(Attendance instance);
    partial void UpdateAttendance(Attendance instance);
    partial void DeleteAttendance(Attendance instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertLeave(Leave instance);
    partial void UpdateLeave(Leave instance);
    partial void DeleteLeave(Leave instance);
    partial void InsertNgayLe(NgayLe instance);
    partial void UpdateNgayLe(NgayLe instance);
    partial void DeleteNgayLe(NgayLe instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertPhanCong(PhanCong instance);
    partial void UpdatePhanCong(PhanCong instance);
    partial void DeletePhanCong(PhanCong instance);
    partial void InsertUserAccount(UserAccount instance);
    partial void UpdateUserAccount(UserAccount instance);
    partial void DeleteUserAccount(UserAccount instance);
    partial void InsertSalary(Salary instance);
    partial void UpdateSalary(Salary instance);
    partial void DeleteSalary(Salary instance);
    partial void InsertRewardsPenalty(RewardsPenalty instance);
    partial void UpdateRewardsPenalty(RewardsPenalty instance);
    partial void DeleteRewardsPenalty(RewardsPenalty instance);
        #endregion
        public DBDataContext() :
               base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLNSConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }
        public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Attendance> Attendances
		{
			get
			{
				return this.GetTable<Attendance>();
			}
		}
		
		public System.Data.Linq.Table<CheDo> CheDos
		{
			get
			{
				return this.GetTable<CheDo>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Leave> Leaves
		{
			get
			{
				return this.GetTable<Leave>();
			}
		}
		
		public System.Data.Linq.Table<NgayLe> NgayLes
		{
			get
			{
				return this.GetTable<NgayLe>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<PhanCong> PhanCongs
		{
			get
			{
				return this.GetTable<PhanCong>();
			}
		}
		
		public System.Data.Linq.Table<UserAccount> UserAccounts
		{
			get
			{
				return this.GetTable<UserAccount>();
			}
		}
		
		public System.Data.Linq.Table<Salary> Salaries
		{
			get
			{
				return this.GetTable<Salary>();
			}
		}
		
		public System.Data.Linq.Table<RewardsPenalty> RewardsPenalties
		{
			get
			{
				return this.GetTable<RewardsPenalty>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attendance")]
	public partial class Attendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttendanceID;
		
		private System.Nullable<int> _EmployeeID;
		
		private System.Nullable<System.TimeSpan> _CheckIn;
		
		private System.Nullable<System.TimeSpan> _CheckOut;
		
		private System.Nullable<int> _Timer;
		
		private System.Nullable<System.DateTime> _Ngay;
		
		private string _DiTre;
		
		private string _VeSom;
		
		private System.Nullable<int> _OT;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttendanceIDChanging(int value);
    partial void OnAttendanceIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnCheckInChanging(System.Nullable<System.TimeSpan> value);
    partial void OnCheckInChanged();
    partial void OnCheckOutChanging(System.Nullable<System.TimeSpan> value);
    partial void OnCheckOutChanged();
    partial void OnTimerChanging(System.Nullable<int> value);
    partial void OnTimerChanged();
    partial void OnNgayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChanged();
    partial void OnDiTreChanging(string value);
    partial void OnDiTreChanged();
    partial void OnVeSomChanging(string value);
    partial void OnVeSomChanged();
    partial void OnOTChanging(System.Nullable<int> value);
    partial void OnOTChanged();
    #endregion
		
		public Attendance()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttendanceID
		{
			get
			{
				return this._AttendanceID;
			}
			set
			{
				if ((this._AttendanceID != value))
				{
					this.OnAttendanceIDChanging(value);
					this.SendPropertyChanging();
					this._AttendanceID = value;
					this.SendPropertyChanged("AttendanceID");
					this.OnAttendanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckIn", DbType="Time")]
		public System.Nullable<System.TimeSpan> CheckIn
		{
			get
			{
				return this._CheckIn;
			}
			set
			{
				if ((this._CheckIn != value))
				{
					this.OnCheckInChanging(value);
					this.SendPropertyChanging();
					this._CheckIn = value;
					this.SendPropertyChanged("CheckIn");
					this.OnCheckInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOut", DbType="Time")]
		public System.Nullable<System.TimeSpan> CheckOut
		{
			get
			{
				return this._CheckOut;
			}
			set
			{
				if ((this._CheckOut != value))
				{
					this.OnCheckOutChanging(value);
					this.SendPropertyChanging();
					this._CheckOut = value;
					this.SendPropertyChanged("CheckOut");
					this.OnCheckOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timer", DbType="Int")]
		public System.Nullable<int> Timer
		{
			get
			{
				return this._Timer;
			}
			set
			{
				if ((this._Timer != value))
				{
					this.OnTimerChanging(value);
					this.SendPropertyChanging();
					this._Timer = value;
					this.SendPropertyChanged("Timer");
					this.OnTimerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date")]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiTre", DbType="NVarChar(255)")]
		public string DiTre
		{
			get
			{
				return this._DiTre;
			}
			set
			{
				if ((this._DiTre != value))
				{
					this.OnDiTreChanging(value);
					this.SendPropertyChanging();
					this._DiTre = value;
					this.SendPropertyChanged("DiTre");
					this.OnDiTreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VeSom", DbType="NVarChar(255)")]
		public string VeSom
		{
			get
			{
				return this._VeSom;
			}
			set
			{
				if ((this._VeSom != value))
				{
					this.OnVeSomChanging(value);
					this.SendPropertyChanging();
					this._VeSom = value;
					this.SendPropertyChanged("VeSom");
					this.OnVeSomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT", DbType="Int")]
		public System.Nullable<int> OT
		{
			get
			{
				return this._OT;
			}
			set
			{
				if ((this._OT != value))
				{
					this.OnOTChanging(value);
					this.SendPropertyChanging();
					this._OT = value;
					this.SendPropertyChanged("OT");
					this.OnOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Attendance", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Attendances.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Attendances.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheDo")]
	public partial class CheDo
	{
		
		private string _MaCD;
		
		private System.Nullable<int> _MaNV;
		
		private string _NoiCap;
		
		private System.Nullable<System.DateTime> _NgayCap;
		
		private string _Note;
		
		public CheDo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCD", DbType="NVarChar(255)")]
		public string MaCD
		{
			get
			{
				return this._MaCD;
			}
			set
			{
				if ((this._MaCD != value))
				{
					this._MaCD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this._MaNV = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiCap", DbType="NVarChar(255)")]
		public string NoiCap
		{
			get
			{
				return this._NoiCap;
			}
			set
			{
				if ((this._NoiCap != value))
				{
					this._NoiCap = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCap
		{
			get
			{
				return this._NgayCap;
			}
			set
			{
				if ((this._NgayCap != value))
				{
					this._NgayCap = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(255)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departments")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DepartmentID;
		
		private string _DepartmentName;
		
		private string _TrangThai;
		
		private System.Nullable<System.DateTime> _NgayThanhLap;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnNgayThanhLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhLapChanged();
    #endregion
		
		public Department()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(50)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(255)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThanhLap
		{
			get
			{
				return this._NgayThanhLap;
			}
			set
			{
				if ((this._NgayThanhLap != value))
				{
					this.OnNgayThanhLapChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhLap = value;
					this.SendPropertyChanged("NgayThanhLap");
					this.OnNgayThanhLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Employees", ThisKey="DepartmentID", OtherKey="DepartmentID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private string _CCCD;
		
		private string _NoiCap;
		
		private System.Nullable<System.DateTime> _NgayDK;
		
		private System.Nullable<System.DateTime> _NgayKi;
		
		private System.Nullable<System.DateTime> _NgayHetHan;
		
		private string _Email;
		
		private string _ChucVu;
		
		private string _GioiTinh;
		
		private string _DanToc;
		
		private string _HocVan;
		
		private System.Nullable<int> _DepartmentID;
		
		private string _TrangThai;
		
		private EntitySet<Attendance> _Attendances;
		
		private EntitySet<Leave> _Leaves;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<PhanCong> _PhanCongs;
		
		private EntitySet<UserAccount> _UserAccounts;
		
		private EntitySet<Salary> _Salaries;
		
		private EntitySet<RewardsPenalty> _RewardsPenalties;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnNoiCapChanging(string value);
    partial void OnNoiCapChanged();
    partial void OnNgayDKChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDKChanged();
    partial void OnNgayKiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKiChanged();
    partial void OnNgayHetHanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHetHanChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDanTocChanging(string value);
    partial void OnDanTocChanged();
    partial void OnHocVanChanging(string value);
    partial void OnHocVanChanged();
    partial void OnDepartmentIDChanging(System.Nullable<int> value);
    partial void OnDepartmentIDChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public Employee()
		{
			this._Attendances = new EntitySet<Attendance>(new Action<Attendance>(this.attach_Attendances), new Action<Attendance>(this.detach_Attendances));
			this._Leaves = new EntitySet<Leave>(new Action<Leave>(this.attach_Leaves), new Action<Leave>(this.detach_Leaves));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._PhanCongs = new EntitySet<PhanCong>(new Action<PhanCong>(this.attach_PhanCongs), new Action<PhanCong>(this.detach_PhanCongs));
			this._UserAccounts = new EntitySet<UserAccount>(new Action<UserAccount>(this.attach_UserAccounts), new Action<UserAccount>(this.detach_UserAccounts));
			this._Salaries = new EntitySet<Salary>(new Action<Salary>(this.attach_Salaries), new Action<Salary>(this.detach_Salaries));
			this._RewardsPenalties = new EntitySet<RewardsPenalty>(new Action<RewardsPenalty>(this.attach_RewardsPenalties), new Action<RewardsPenalty>(this.detach_RewardsPenalties));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(15)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="NVarChar(255)")]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiCap", DbType="NVarChar(255)")]
		public string NoiCap
		{
			get
			{
				return this._NoiCap;
			}
			set
			{
				if ((this._NoiCap != value))
				{
					this.OnNoiCapChanging(value);
					this.SendPropertyChanging();
					this._NoiCap = value;
					this.SendPropertyChanged("NoiCap");
					this.OnNoiCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDK", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDK
		{
			get
			{
				return this._NgayDK;
			}
			set
			{
				if ((this._NgayDK != value))
				{
					this.OnNgayDKChanging(value);
					this.SendPropertyChanging();
					this._NgayDK = value;
					this.SendPropertyChanged("NgayDK");
					this.OnNgayDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKi", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKi
		{
			get
			{
				return this._NgayKi;
			}
			set
			{
				if ((this._NgayKi != value))
				{
					this.OnNgayKiChanging(value);
					this.SendPropertyChanging();
					this._NgayKi = value;
					this.SendPropertyChanged("NgayKi");
					this.OnNgayKiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHetHan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayHetHan
		{
			get
			{
				return this._NgayHetHan;
			}
			set
			{
				if ((this._NgayHetHan != value))
				{
					this.OnNgayHetHanChanging(value);
					this.SendPropertyChanging();
					this._NgayHetHan = value;
					this.SendPropertyChanged("NgayHetHan");
					this.OnNgayHetHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(100)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(100)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanToc", DbType="NVarChar(100)")]
		public string DanToc
		{
			get
			{
				return this._DanToc;
			}
			set
			{
				if ((this._DanToc != value))
				{
					this.OnDanTocChanging(value);
					this.SendPropertyChanging();
					this._DanToc = value;
					this.SendPropertyChanged("DanToc");
					this.OnDanTocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocVan", DbType="NVarChar(100)")]
		public string HocVan
		{
			get
			{
				return this._HocVan;
			}
			set
			{
				if ((this._HocVan != value))
				{
					this.OnHocVanChanging(value);
					this.SendPropertyChanging();
					this._HocVan = value;
					this.SendPropertyChanged("HocVan");
					this.OnHocVanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int")]
		public System.Nullable<int> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Attendance", Storage="_Attendances", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<Attendance> Attendances
		{
			get
			{
				return this._Attendances;
			}
			set
			{
				this._Attendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Leave", Storage="_Leaves", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<Leave> Leaves
		{
			get
			{
				return this._Leaves;
			}
			set
			{
				this._Leaves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Project", Storage="_Projects", ThisKey="EmployeeID", OtherKey="ManagerID")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PhanCong", Storage="_PhanCongs", ThisKey="EmployeeID", OtherKey="MaNV")]
		public EntitySet<PhanCong> PhanCongs
		{
			get
			{
				return this._PhanCongs;
			}
			set
			{
				this._PhanCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_UserAccount", Storage="_UserAccounts", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<UserAccount> UserAccounts
		{
			get
			{
				return this._UserAccounts;
			}
			set
			{
				this._UserAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Salary", Storage="_Salaries", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<Salary> Salaries
		{
			get
			{
				return this._Salaries;
			}
			set
			{
				this._Salaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_RewardsPenalty", Storage="_RewardsPenalties", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<RewardsPenalty> RewardsPenalties
		{
			get
			{
				return this._RewardsPenalties;
			}
			set
			{
				this._RewardsPenalties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Department", ThisKey="DepartmentID", OtherKey="DepartmentID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._DepartmentID = value.DepartmentID;
					}
					else
					{
						this._DepartmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Leaves(Leave entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Leaves(Leave entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_UserAccounts(UserAccount entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_UserAccounts(UserAccount entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Salaries(Salary entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Salaries(Salary entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_RewardsPenalties(RewardsPenalty entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_RewardsPenalties(RewardsPenalty entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Leave")]
	public partial class Leave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeaveID;
		
		private System.Nullable<int> _EmployeeID;
		
		private string _LeaveType;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Status;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaveIDChanging(int value);
    partial void OnLeaveIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnLeaveTypeChanging(string value);
    partial void OnLeaveTypeChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Leave()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LeaveID
		{
			get
			{
				return this._LeaveID;
			}
			set
			{
				if ((this._LeaveID != value))
				{
					this.OnLeaveIDChanging(value);
					this.SendPropertyChanging();
					this._LeaveID = value;
					this.SendPropertyChanged("LeaveID");
					this.OnLeaveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveType", DbType="NVarChar(50)")]
		public string LeaveType
		{
			get
			{
				return this._LeaveType;
			}
			set
			{
				if ((this._LeaveType != value))
				{
					this.OnLeaveTypeChanging(value);
					this.SendPropertyChanging();
					this._LeaveType = value;
					this.SendPropertyChanged("LeaveType");
					this.OnLeaveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Leave", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Leaves.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Leaves.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NgayLe")]
	public partial class NgayLe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNgay;
		
		private string _TenNgayLe;
		
		private System.DateTime _NgayBatDau;
		
		private System.DateTime _NgayKetThuc;
		
		private int _HeSo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNgayChanging(int value);
    partial void OnMaNgayChanged();
    partial void OnTenNgayLeChanging(string value);
    partial void OnTenNgayLeChanged();
    partial void OnNgayBatDauChanging(System.DateTime value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.DateTime value);
    partial void OnNgayKetThucChanged();
    partial void OnHeSoChanging(int value);
    partial void OnHeSoChanged();
    #endregion
		
		public NgayLe()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNgay", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNgay
		{
			get
			{
				return this._MaNgay;
			}
			set
			{
				if ((this._MaNgay != value))
				{
					this.OnMaNgayChanging(value);
					this.SendPropertyChanging();
					this._MaNgay = value;
					this.SendPropertyChanged("MaNgay");
					this.OnMaNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNgayLe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNgayLe
		{
			get
			{
				return this._TenNgayLe;
			}
			set
			{
				if ((this._TenNgayLe != value))
				{
					this.OnTenNgayLeChanging(value);
					this.SendPropertyChanging();
					this._TenNgayLe = value;
					this.SendPropertyChanged("TenNgayLe");
					this.OnTenNgayLeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date NOT NULL")]
		public System.DateTime NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date NOT NULL")]
		public System.DateTime NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSo", DbType="Int NOT NULL")]
		public int HeSo
		{
			get
			{
				return this._HeSo;
			}
			set
			{
				if ((this._HeSo != value))
				{
					this.OnHeSoChanging(value);
					this.SendPropertyChanging();
					this._HeSo = value;
					this.SendPropertyChanged("HeSo");
					this.OnHeSoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectID;
		
		private string _ProjectName;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _ManagerID;
		
		private string _TrangThai;
		
		private EntitySet<PhanCong> _PhanCongs;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIDChanging(int value);
    partial void OnProjectIDChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnManagerIDChanging(System.Nullable<int> value);
    partial void OnManagerIDChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public Project()
		{
			this._PhanCongs = new EntitySet<PhanCong>(new Action<PhanCong>(this.attach_PhanCongs), new Action<PhanCong>(this.detach_PhanCongs));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(100)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerID", DbType="Int")]
		public System.Nullable<int> ManagerID
		{
			get
			{
				return this._ManagerID;
			}
			set
			{
				if ((this._ManagerID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerIDChanging(value);
					this.SendPropertyChanging();
					this._ManagerID = value;
					this.SendPropertyChanged("ManagerID");
					this.OnManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_PhanCong", Storage="_PhanCongs", ThisKey="ProjectID", OtherKey="MaDA")]
		public EntitySet<PhanCong> PhanCongs
		{
			get
			{
				return this._PhanCongs;
			}
			set
			{
				this._PhanCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Project", Storage="_Employee", ThisKey="ManagerID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ManagerID = value.EmployeeID;
					}
					else
					{
						this._ManagerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanCong")]
	public partial class PhanCong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPC;
		
		private int _MaDA;
		
		private int _MaNV;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPCChanging(int value);
    partial void OnMaPCChanged();
    partial void OnMaDAChanging(int value);
    partial void OnMaDAChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    #endregion
		
		public PhanCong()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPC
		{
			get
			{
				return this._MaPC;
			}
			set
			{
				if ((this._MaPC != value))
				{
					this.OnMaPCChanging(value);
					this.SendPropertyChanging();
					this._MaPC = value;
					this.SendPropertyChanged("MaPC");
					this.OnMaPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDA", DbType="Int NOT NULL")]
		public int MaDA
		{
			get
			{
				return this._MaDA;
			}
			set
			{
				if ((this._MaDA != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDAChanging(value);
					this.SendPropertyChanging();
					this._MaDA = value;
					this.SendPropertyChanged("MaDA");
					this.OnMaDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL")]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PhanCong", Storage="_Employee", ThisKey="MaNV", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.PhanCongs.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.PhanCongs.Add(this);
						this._MaNV = value.EmployeeID;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_PhanCong", Storage="_Project", ThisKey="MaDA", OtherKey="ProjectID", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.PhanCongs.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.PhanCongs.Add(this);
						this._MaDA = value.ProjectID;
					}
					else
					{
						this._MaDA = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAccounts")]
	public partial class UserAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<int> _EmployeeID;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    #endregion
		
		public UserAccount()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_UserAccount", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.UserAccounts.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.UserAccounts.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Salary")]
	public partial class Salary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SalaryID;
		
		private System.Nullable<int> _EmployeeID;
		
		private System.Nullable<decimal> _BasicSalary;
		
		private System.Nullable<decimal> _Bonus;
		
		private System.Nullable<decimal> _Phat;
		
		private System.Nullable<decimal> _Deductions;
		
		private System.Nullable<int> _SoGioLam;
		
		private System.Nullable<int> _OT;
		
		private System.Nullable<int> _GioNgayLe;
		
		private System.Nullable<int> _TongSoGioLam;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalaryIDChanging(int value);
    partial void OnSalaryIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnBasicSalaryChanging(System.Nullable<decimal> value);
    partial void OnBasicSalaryChanged();
    partial void OnBonusChanging(System.Nullable<decimal> value);
    partial void OnBonusChanged();
    partial void OnPhatChanging(System.Nullable<decimal> value);
    partial void OnPhatChanged();
    partial void OnDeductionsChanging(System.Nullable<decimal> value);
    partial void OnDeductionsChanged();
    partial void OnSoGioLamChanging(System.Nullable<int> value);
    partial void OnSoGioLamChanged();
    partial void OnOTChanging(System.Nullable<int> value);
    partial void OnOTChanged();
    partial void OnGioNgayLeChanging(System.Nullable<int> value);
    partial void OnGioNgayLeChanged();
    partial void OnTongSoGioLamChanging(System.Nullable<int> value);
    partial void OnTongSoGioLamChanged();
    #endregion
		
		public Salary()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SalaryID
		{
			get
			{
				return this._SalaryID;
			}
			set
			{
				if ((this._SalaryID != value))
				{
					this.OnSalaryIDChanging(value);
					this.SendPropertyChanging();
					this._SalaryID = value;
					this.SendPropertyChanged("SalaryID");
					this.OnSalaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicSalary", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> BasicSalary
		{
			get
			{
				return this._BasicSalary;
			}
			set
			{
				if ((this._BasicSalary != value))
				{
					this.OnBasicSalaryChanging(value);
					this.SendPropertyChanging();
					this._BasicSalary = value;
					this.SendPropertyChanged("BasicSalary");
					this.OnBasicSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bonus", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				if ((this._Bonus != value))
				{
					this.OnBonusChanging(value);
					this.SendPropertyChanging();
					this._Bonus = value;
					this.SendPropertyChanged("Bonus");
					this.OnBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phat", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> Phat
		{
			get
			{
				return this._Phat;
			}
			set
			{
				if ((this._Phat != value))
				{
					this.OnPhatChanging(value);
					this.SendPropertyChanging();
					this._Phat = value;
					this.SendPropertyChanged("Phat");
					this.OnPhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deductions", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> Deductions
		{
			get
			{
				return this._Deductions;
			}
			set
			{
				if ((this._Deductions != value))
				{
					this.OnDeductionsChanging(value);
					this.SendPropertyChanging();
					this._Deductions = value;
					this.SendPropertyChanged("Deductions");
					this.OnDeductionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoGioLam", DbType="Int")]
		public System.Nullable<int> SoGioLam
		{
			get
			{
				return this._SoGioLam;
			}
			set
			{
				if ((this._SoGioLam != value))
				{
					this.OnSoGioLamChanging(value);
					this.SendPropertyChanging();
					this._SoGioLam = value;
					this.SendPropertyChanged("SoGioLam");
					this.OnSoGioLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT", DbType="Int")]
		public System.Nullable<int> OT
		{
			get
			{
				return this._OT;
			}
			set
			{
				if ((this._OT != value))
				{
					this.OnOTChanging(value);
					this.SendPropertyChanging();
					this._OT = value;
					this.SendPropertyChanged("OT");
					this.OnOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioNgayLe", DbType="Int")]
		public System.Nullable<int> GioNgayLe
		{
			get
			{
				return this._GioNgayLe;
			}
			set
			{
				if ((this._GioNgayLe != value))
				{
					this.OnGioNgayLeChanging(value);
					this.SendPropertyChanging();
					this._GioNgayLe = value;
					this.SendPropertyChanged("GioNgayLe");
					this.OnGioNgayLeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSoGioLam", DbType="Int")]
		public System.Nullable<int> TongSoGioLam
		{
			get
			{
				return this._TongSoGioLam;
			}
			set
			{
				if ((this._TongSoGioLam != value))
				{
					this.OnTongSoGioLamChanging(value);
					this.SendPropertyChanging();
					this._TongSoGioLam = value;
					this.SendPropertyChanged("TongSoGioLam");
					this.OnTongSoGioLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Salary", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Salaries.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Salaries.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RewardsPenalties")]
	public partial class RewardsPenalty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RewardPenaltyID;
		
		private System.Nullable<int> _EmployeeID;
		
		private string _Type;
		
		private System.Nullable<decimal> _Amount;
		
		private string _Reason;
		
		private System.Nullable<System.DateTime> _Ngay;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRewardPenaltyIDChanging(int value);
    partial void OnRewardPenaltyIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnNgayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChanged();
    #endregion
		
		public RewardsPenalty()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RewardPenaltyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RewardPenaltyID
		{
			get
			{
				return this._RewardPenaltyID;
			}
			set
			{
				if ((this._RewardPenaltyID != value))
				{
					this.OnRewardPenaltyIDChanging(value);
					this.SendPropertyChanging();
					this._RewardPenaltyID = value;
					this.SendPropertyChanged("RewardPenaltyID");
					this.OnRewardPenaltyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(255)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date")]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_RewardsPenalty", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.RewardsPenalties.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.RewardsPenalties.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
